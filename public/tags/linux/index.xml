<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Yosua Ian Sebastian's blog</title><link>https://darcien.dev/tags/linux/</link><description>Recent posts in my blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 19 Jul 2023 00:06:50 +0700</lastBuildDate><atom:link href="https://darcien.dev/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Q: How do I get % CPU usage of individual service in systemd?</title><link>https://darcien.dev/p/systemd-cgtop-for-systemd-cpu-usage/</link><pubDate>Wed, 19 Jul 2023 00:06:50 +0700</pubDate><guid>https://darcien.dev/p/systemd-cgtop-for-systemd-cpu-usage/</guid><description>A: Use `systemd-cgtop`</description><content:encoded><![CDATA[<p>TIL about <code>systemd-cgtop</code> from <a href="https://superuser.com/questions/1060670/systemd-cpu-usage-of-services">here</a>
when trying to debug tailscaled high CPU usage.</p>
<p><code>systemd-cgtop</code> is interactive, but using:</p>
<pre tabindex="0"><code>systemd-cgtop -c
</code></pre><p>will sort the &ldquo;control groups&rdquo; by CPU usage.</p>
<p>Example output:</p>
<pre tabindex="0"><code>Control Group                                     Tasks   %CPU   Memory  Input/s Output/s
user.slice                                           63    1.1   401.0M        -        -
user.slice/user-1000.slice                           63    1.1   401.0M        -        -
/                                                   153    1.0   413.1M        -        -
user.slice/user-1000.slice/session-1.scope            4    0.8   164.3M        -        -
user.slice/user-1000.slice/session-c1.scope          50    0.4   226.7M        -        -
system.slice                                         34    0.3   174.3M        -        -
system.slice/tailscaled.service                      10    0.1    39.4M        -        -
system.slice/systemd-oomd.service                     1    0.1     1.4M        -        -
system.slice/systemd-journald.service                 1    0.1    45.9M        -        -
dev-hugepages.mount                                   -      -   368.0K        -        -
dev-mqueue.mount                                      -      -     8.0K        -        -
init.scope                                            1      -     5.6M        -        -
sys-fs-fuse-connections.mount                         -      -     8.0K        -        -
sys-kernel-config.mount                               -      -     4.0K        -        -
sys-kernel-debug.mount                                -      -     4.0K        -        -
system.slice/dbus.service                             1      -     2.8M        -        -
system.slice/dev-zram0.swap                           -      -   356.0K        -        -
system.slice/nix-daemon.service                       2      -     4.9M        -        -
system.slice/nscd.service                            11      -     3.5M        -        -
system.slice/sshd.service                             1      -     5.0M        -        -
system.slice/system-getty.slice                       1      -   280.0K        -        -
system.slice/system-getty.slice/getty@tty1.service    1      -   276.0K        -        -
system.slice/system-modprobe.slice                    -      -   724.0K        -        -
system.slice/systemd-logind.service                   1      -     2.0M        -        -
system.slice/systemd-networkd.service                 1      -     3.1M        -        -
system.slice/systemd-resolved.service                 1      -     9.6M        -        -
system.slice/systemd-timesyncd.service                2      -     1.4M        -        -
system.slice/systemd-udevd.service                    1      -    19.5M        -        -
user.slice/user-1000.slice/session-c3.scope           7      -     2.3M        -        -
user.slice/user-1000.slice/user@1000.service          2      -     6.7M        -        -
</code></pre><p>Man page: <a href="https://www.freedesktop.org/software/systemd/man/systemd-cgtop.html">https://www.freedesktop.org/software/systemd/man/systemd-cgtop.html</a></p>
<p>Using top or htop works but I have no idea how to filter out
regular processes from the list.</p>
<hr>
<p>Post 19 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>
]]></content:encoded></item><item><title>Road to NixOS: How do I install programs?</title><link>https://darcien.dev/p/road-to-nixos-install-programs/</link><pubDate>Sat, 08 Jul 2023 02:14:14 +0700</pubDate><guid>https://darcien.dev/p/road-to-nixos-install-programs/</guid><description>Adding zsh, Home Manager, and VS Code Remote - SSH</description><content:encoded><![CDATA[<p>Okay, at this point I know that in NixOS
everything is configured via <code>/etc/nixos/configuration.nix</code>.
But what do I need to write in the config?
How do I know what to write?</p>
<p>From here on, my googlefu is being tested again.</p>
<h2 id="i-want-zsh">I want zsh</h2>
<p>Ez search, there&rsquo;s wiki page for it <a href="https://nixos.wiki/wiki/Zsh">here</a>.
It&rsquo;s kinda crazy now that I think about it.
I can write <code>programs.zsh.enable = true;</code>, rebuild, blam, I got zsh as my default.</p>
<p>Next, I want to customize zsh.
I was ready to copy paste my usual <code>.zshrc</code>,
but that&rsquo;s not a very Nix way to do it.</p>
<p>The Nix way would be to change the option in the config file.
So how do I know what&rsquo;s the avaiable options?
At the time I had no idea,
so I used GitHub search and try to find .nix file with zsh config for reference.
That worked just fine, I succeded in porting my <code>.zshrc</code> to use Nix syntax.</p>
<p>(Later on I learned the existance of <a href="https://mynixos.com/">MyNixOS</a>
but that&rsquo;s story for another time.)</p>
<p>Next, how do I apply the zsh config to my user only?
Applying it globally is acceptable since I&rsquo;m the only user.
But it feels dirty since it&rsquo;ll also affect root user.</p>
<p>Onwards! I found out the existance of Home Manager</p>
<h2 id="unto-the-home-manager">Unto the Home Manager</h2>
<p>Initially I ignored Home Manager since it has a bit scary warning:</p>
<blockquote>
<h3 id="words-of-warning"><a href="https://github.com/nix-community/home-manager#words-of-warning">Words of warning</a></h3>
<p>Unfortunately, it is quite possible to get difficult to understand errors when working with Home Manager. You should therefore be comfortable using the Nix language and the various tools in the Nix ecosystem.</p>
<p>If you are not very familiar with Nix but still want to use Home Manager then you are strongly encouraged to start with a small and very simple configuration and gradually make it more elaborate as you learn.</p>
<p>&hellip;</p></blockquote>
<p>Well, I&rsquo;m new and not familiar with Nix,
let&rsquo;s try it anyway,
what could possibly go wrong?</p>
<p>Yep, I tried following the <a href="https://nix-community.github.io/home-manager/index.html#sec-install-nixos-module">install Home Manager as NixOS module</a>
and couldn&rsquo;t figure out why rebuild is failing.</p>
<p>After a quick googling, I found this <a href="https://tech.aufomm.com/my-nixos-journey-home-manager/">blog post</a>
that describes exactly what I want.</p>
<p>This time I followed the steps carefully and&hellip;
it worked!</p>
<p>It was the release channel.
I didn&rsquo;t read the manual close enough and just run this:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">sudo nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
</span></span></code></pre></div><p>It doesn&rsquo;t work because it&rsquo;s the master branch release channel.
While I&rsquo;m at 22.11.
So the weird error I&rsquo;m seeing is from the release channel mismatch.
Rebuild works after I added the correct release channel:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">sudo nix-channel --add https://github.com/nix-community/home-manager/archive/release-22.11.tar.gz home-manager
</span></span></code></pre></div><p>Okay, I got per user config working.
It&rsquo;s time to add more packages!</p>
<h2 id="infinite-packages-and-beyond">Infinite Packages and Beyond</h2>
<p>The fact that I can create separate config file for each package,
have the options isolated,
and config files not spread all over the places is SUPER nice.
I got too used by the usual pattern where I need to read each package
manual to figure out where the config file is located.</p>
<p>Also, the fact that I can declare all the global packages in the config
is nice.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-nix" data-lang="nix"><span class="line"><span class="cl"><span class="p">{</span> <span class="n">pkgs</span><span class="o">,</span> <span class="o">...</span> <span class="p">}:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="n">environment</span><span class="o">.</span><span class="n">systemPackages</span> <span class="o">=</span> <span class="k">with</span> <span class="n">pkgs</span><span class="p">;</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="n">curl</span>
</span></span><span class="line"><span class="cl">    <span class="n">file</span>
</span></span><span class="line"><span class="cl">    <span class="n">htop</span>
</span></span><span class="line"><span class="cl">    <span class="n">lsof</span>
</span></span><span class="line"><span class="cl">    <span class="n">nixpkgs-fmt</span>
</span></span><span class="line"><span class="cl">    <span class="n">wget</span>
</span></span><span class="line"><span class="cl">  <span class="p">];</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>It&rsquo;s not everyday I need to reinstall global packages,
so usually it doesn&rsquo;t matter that much.
But recently I started using <a href="https://github.com/features/codespaces">GitHub Codespaces</a>
at work.
And since it&rsquo;s a throwaway env, I need to reinstall and reconfigure the packages again.
It would be nice if I have Home Manager that would install and configure everything in Codepaces,
something to look into later.
Specifying the needed packages in Codepsaces config doesn&rsquo;t work really for
packages that&rsquo;s not used by the whole team since the preinstalled packages
are shared.</p>
<h2 id="using-vs-code-with-remote---ssh">Using VS Code with Remote - SSH</h2>
<p><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh">Remote - SSH</a>
extension doesn&rsquo;t work out of the box with NixOS.
Trying to connect immediately will fail with remote VS Code SSH server failure.</p>
<p>Thankfully someone already identified the cause and shared the fix <a href="https://github.com/nix-community/nixos-vscode-server">here</a>.
After applying the fix and rebuild, VS Code Remote - SSH work flawlessly.</p>
<h2 id="adding-tailscale">Adding Tailscale</h2>
<p>I love <a href="https://tailscale.com/">Tailscale</a>, so I&rsquo;m going to install it here too.
Installing was straightforward since Tailscale provide <a href="https://tailscale.com/kb/1063/install-nixos/">installation manual</a>.</p>
<p>Unfortunately I&rsquo;m getting high CPU usage after enabling Magic DNS in Tailscale.
After reporting it <a href="https://github.com/tailscale/tailscale/issues/8563">here</a>
and tinkering with it, I think it&rsquo;s fixed for now.
Will write about in a separate post as the fix wasn&rsquo;t a straightforward one.</p>
<h2 id="closing-thoughts">Closing Thoughts</h2>
<p>I can feel it, I&rsquo;m back at the Linux world again.
Where I&rsquo;m spending hours just to get things working.
I don&rsquo;t know if it&rsquo;s just because I&rsquo;m not used to Linux,
but whenever it&rsquo;s Linux, configuring things and
rabbit hole of errors easily devours all my free time.
Some time this is fun, but doing this after working hour is a bit tiring.
I need to find a good balance between this and other more relaxing hobbies.</p>
<p>Next will be making Tailscale working!</p>
<hr>
<p>Post 18 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>
]]></content:encoded></item><item><title>Road to NixOS: The Infection</title><link>https://darcien.dev/p/road-to-nixos-infection/</link><pubDate>Mon, 03 Jul 2023 15:46:46 +0000</pubDate><guid>https://darcien.dev/p/road-to-nixos-infection/</guid><description>The start of a journey; migrating a hobby server to NixOS.</description><content:encoded><![CDATA[<p>Disclaimer: This series is not a guide nor a walkthrough for NixOS.
This is intended to be a public notes of my journey here.</p>
<h2 id="why">Why?</h2>
<p>Indo&rsquo;s goverment announced extended holiday for 28-30 June 2023<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.
This gives me unexpected free time.
So I decided to tinker with NixOS.
Migrating an existing Ubuntu 18 hobby server that has a bunch of services
running in it should be enough learning material.</p>
<h2 id="toe-dipping">Toe Dipping</h2>
<p>Before renting a cloud host, I want to try NixOS locally first.
What I tried:</p>
<h3 id="nixos-on-wsl">NixOS on WSL</h3>
<p>This kinda work thanks to community effort in <a href="https://github.com/nix-community/NixOS-WSL">NixOS-WSL</a>.
There are plethora of issues stemming from WSL.
Most of them have known workaround,
so I kept trying.
Until docker happened.
I couldn&rsquo;t connect to docker container running in NixOS from Windows.
The maintainer of NixOS-WSL seems to experience the same issue<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>.
I&rsquo;m not familiar enough with WSL and NixOS to debug this, dropping&hellip;</p>
<h3 id="nixos-as-guest-vm-virtualbox">NixOS as guest VM (VirtualBox)</h3>
<p>I have a bunch of ancient Arch Linux VMs here, they all work great.
Then NixOS should work just fine right?
Well yes, until I tried to reboot the NixOS.
Seems like the drive where NixOS is not bootable?
I don&rsquo;t think it&rsquo;s because I used the minimal NixOS image when installing,
instead of using the one with desktop environment included.</p>
<p>I was proven wrong.
After reading the manual again, the minimal image boots into the installer,
not an installed NixOS<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.
Following the manual seems easy enough,
but I doubt it&rsquo;s worth to do on a throwaway VM.</p>
<h2 id="nixos-infect-entered-the-room">NixOS-Infect entered the room</h2>
<blockquote>
<h3 id="what-is-this">What is this?</h3>
<p>A script to install NixOS on non-NixOS hosts.</p>
<p>NixOS-Infect is so named because of the high likelihood of rendering a system inoperable. Use with extreme caution and preferably only on newly provisioned systems.</p>
<p><a href="https://github.com/elitak/nixos-infect">https://github.com/elitak/nixos-infect</a></p></blockquote>
<p>I stumbled over this when searching around NixOS.
And seeing nixos-infect support the latest LTS Ubuntu (22.04 atm)
on Digital Ocean is trigger to use this instead of VM on my desktop.</p>
<p>So I went ahead and created a new droplet, AMD CPU + 2 GB RAM.
Along this, I also learnt &ldquo;user data&rdquo; which can be used to run script
on droplet creation.
Specifically I need the user data to run the infect script.</p>
<p>While waiting for the infect script to finish,
I learnt few tricks like
how to make <code>less</code> follow the tail like docker logs<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>.</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">less +F /tmp/infect.log
</span></span></code></pre></div><p>By the time I looked at the log again, it is already rebooting,
which is a good sign!</p>
<p>Fast forward few frames&hellip;</p>
<p>I tried ssh-ing to the droplet using root user&hellip; it worked, I&rsquo;m in!</p>
<p>From this point, it&rsquo;s all tinkering with the config, learning Nix language, and
a lot of <code>sudo nixos-rebuild switch</code>.</p>
<h2 id="closing-thoughts">Closing Thoughts</h2>
<p>I&rsquo;m writing this from the NixOS droplet.
So far I&rsquo;m really happy with the result.</p>
<p>Years ago I set up Arch Linux on a bunch of old laptops and desktops but didn&rsquo;t
write anything after it.
This time I&rsquo;m determined to leave some notes on the new journey.</p>
<p>Next post is about making the NixOS more sane as dev environment!</p>
<hr>
<p>Post 17 of <a href="https://100daystooffload.com/">#100DaysToOffload</a>.</p>
<hr>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://web.archive.org/web/20230703173600/https://en.tempo.co/read/1739780/govt-announces-2-eid-al-adha-joint-leave-days-jokowi-confirms">https://web.archive.org/web/20230703173600/https://en.tempo.co/read/1739780/govt-announces-2-eid-al-adha-joint-leave-days-jokowi-confirms</a>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><a href="https://github.com/nix-community/NixOS-WSL/issues/235#issuecomment-1575977960">https://github.com/nix-community/NixOS-WSL/issues/235#issuecomment-1575977960</a>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><a href="https://nixos.org/manual/nixos/stable/index.html#sec-installation-manual">https://nixos.org/manual/nixos/stable/index.html#sec-installation-manual</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p><a href="https://unix.stackexchange.com/a/474">https://unix.stackexchange.com/a/474</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item></channel></rss>